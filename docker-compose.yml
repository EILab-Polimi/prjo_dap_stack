# Access via "http://localhost:8080"
#   (or "http://$(docker-machine ip):8080" if using docker-machine)
#
# During initial Drupal setup,
# Database type: PostgreSQL
# Database name: postgres
# Database username: postgres
# Database password: example
# ADVANCED OPTIONS; Database host: postgres

version: '3.1'

volumes:
  drupal-data:
  postgres-data:

services:

  postgres:
    container_name: DAP_postgres
    build:
      context: .
      dockerfile: services/postgres/Dockerfile
    environment:
      POSTGRES_USER: prjo
      POSTGRES_PASSWORD: prjo
      POSTGRES_DB: prjo_dap_v2
    ports:
      - 5433:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    restart: always

  drupal:
    container_name: DAP_drupal
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: services/drupal/Dockerfile
    ports:
      - 8080:80
    volumes:
      - drupal-data:/var/www/html
      # - d8all:/opt/drupal
    restart: always

  pgadmin4:
    image: dpage/pgadmin4
    container_name: DAP_pgadmin4
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: pisewip@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    # links:
    #   - postgis
    restart: always

  fastapi:
    container_name: DAP_fastapi
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: services/fastapi/Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0
    # volumes:
    #   - .:/app
    ports:
      - 8008:8000
    # environment:
    #   - DATABASE_URL=postgresql://fastapi_traefik:fastapi_traefik@db:5432/fastapi_traefik
    restart: always

  qgis-server:
      container_name: DAP_qgis
      image: camptocamp/qgis-server:3.22
      # image: kartoza/qgis-server:LTR
      environment:
        - DEBUG=True
        - QGIS_LOG_FILE=/tmp/qgis-server/qgis.log
        - QGIS_SERVER_LOG_FILE=/tmp/qgis-server/qgis-server.log
        # Log level 0 is the lowest (catch all), 5 is the highest (only fatal error)
        - QGIS_DEBUG=1
        - QGIS_SERVER_LOG_LEVEL=0
        # - QGIS_PLUGINPATH=/opt/qgis-server/plugins/
        # It is important to include this environment variable
        # QGIS-Server:LTR cgi needs it
        # - QGIS_PROJECT_FILE=/project/world.qgs
        # - QGIS_PROJECT_FILE=/project/waterPortfolio_v3.qgs
        # - PGSERVICEFILE=/project/.pg_service.conf  # ????? il file c'Ã¨ ma
        # - QGIS_AUTH_DB_DIR_PATH=/etc/qgisserver/
        - QGIS_AUTH_PASSWORD_FILE=/etc/qgisserver/master
      # network_mode: "bridge"
      # will mount the local project directory as the /project directory inside the container
      volumes:
        - ./services/qgis-server/project:/project
      ports:
        # exposing port 80 to 9003 in your local machine
        - '9003:80'
      restart: always

  # taken from https://github.com/opengisch/qgis-docker/blob/master/docker-compose.yml
  #            https://github.com/opengisch/qgis-server-standalone/blob/master/docker-compose.yml
  qgis-server-opengisch:
      container_name: DAP_qgis_3_26
      image: opengisch/qgis-server:3.26.2-focal
      environment:
        # Do not run the embedded copy of nginx
        # SKIP_NGINX: "true"
        # run the embedded copy of nginx
        # SKIP_NGINX: "false"
        # Improve rendering performance
        QGIS_SERVER_PARALLEL_RENDERING: "true"
        QGIS_SERVER_MAX_THREADS: 4
        # Limit the maximum size returned by a GetMap
        QGIS_SERVER_WMS_MAX_HEIGHT: 5000
        QGIS_SERVER_WMS_MAX_WIDTH: 5000
      volumes:
        # Data should be mount RO when working
        # with GeoPackages and more than one QGIS container
        - ./services/qgis-server-opengisch/data:/io/data
        - ./services/qgis-server-opengisch/plugins:/io/plugins
        - ./services/qgis-server-opengisch/fonts:/usr/share/fonts
        - ./services/qgis-server-opengisch/svg:/var/lib/qgis/.local/share/QGIS/QGIS3/profiles/default/svg
        # - ./conf/pg_service.conf:/etc/postgresql-common/pg_service.conf:ro
      ports:
        # exposing port 80 to 9004 in your local machine
        - '9004:80'
      restart: always
